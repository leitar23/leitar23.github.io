<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git版本控制</title>
      <link href="/posts/4257a649/"/>
      <url>/posts/4257a649/</url>
      
        <content type="html"><![CDATA[<p>一、 .gitignore文件:把不用上传到仓库的文件或文件夹放到这个文件<br>因为魔改，把node_modules/从.gitignore中去掉（node_modules有用）<br>二、若博客文件夹丢失</p><ol><li>去github源码仓库复制下图中链接<br><img src="http://tva1.sinaimg.cn/mw690/006q0v6Vly1h6ww0o7nirj30fc0bmmxg.jpg" alt="b2."></li><li>去要放博客的文件夹下克隆仓库<br>打开cmd,用git clone命令<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 复制的链接</span><br></pre></td></tr></table></figure></li><li>博客文件夹回来了，在cmd目录下安装依赖,就可以了<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li>运行命令<br>hexo cl &amp;&amp; hexo g &amp;&amp; hexo s<br>hexo d</li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea使用javadoc标签</title>
      <link href="/posts/4787801/"/>
      <url>/posts/4787801/</url>
      
        <content type="html"><![CDATA[<h1 id="1-如何使用-idea-生成javadoc-文档"><a href="#1-如何使用-idea-生成javadoc-文档" class="headerlink" title="1.如何使用 idea 生成javadoc 文档"></a>1.如何使用 idea 生成javadoc 文档</h1><p>1、打开 idea，点击 Tools-&gt; Generate JavaDoc，打开生成 javadoc 文档的配置页面。<br><img src="https://www.helloimg.com/images/2022/09/29/ZKlPb0.md.png" alt=""><br>2、配置<br>标注的是重要的部分，从上往下分别是配置 javadoc 的范围，输出文件夹路径以及命令行参数。<br>这里的命令行参数很重要，因为只有使用 utf-8 编码才能保证生成时可以正常处理中文字符，所以一定要加上：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-encoding utf-8 -charset utf-8</span><br></pre></td></tr></table></figure><br>3、配置好后，点击确认，生成好后就会自动在浏览器打开进行查看了，也可以在输出文件夹中点击html文件查看。<br><img src="https://www.helloimg.com/images/2022/09/29/ZKlEET.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> Idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java学习笔记</title>
      <link href="/posts/6cb5a254/"/>
      <url>/posts/6cb5a254/</url>
      
        <content type="html"><![CDATA[<blockquote><p>快捷键:<br>1.先选中，再 ctrl + / 注释快捷键, 再次输入就取消注释<br>2.选中，然后输入 tab 整体右移;选中，然后输入 shift+tab 整体左移</p></blockquote><hr><h1 id="一、了解Java"><a href="#一、了解Java" class="headerlink" title="一、了解Java"></a>一、了解Java</h1><h2 id="1、Java重要特点"><a href="#1、Java重要特点" class="headerlink" title="1、Java重要特点"></a>1、Java重要特点</h2><ol><li>Java 语言是面向对象的(oop)</li><li>Java 语言是健壮的。Java 的强类型机制、异常处理、垃圾的自动收集等是 Java 程序健壮性的重要保证</li><li>Java 语言是<u>跨平台性的</u>。[即: 一个编译好的.class 文件可以在多个系统下运行，这种特性称为跨平台]<br><img src="https://www.helloimg.com/images/2022/09/22/Z8qcob.md.png" alt=""></li><li>Java 语言是解释型的[了解]<br>解释性语言：javascript,PHP, java 编译性语言: c / c++<br>区别是：解释性语言，编译后的代码，不能直接被机器执行,需要解释器来执行；编译性语言, 编译后的代码, 可 以直接被机器执行, c /c++</li></ol><h2 id="2、Java-运行机制及运行过程"><a href="#2、Java-运行机制及运行过程" class="headerlink" title="2、Java 运行机制及运行过程"></a>2、Java 运行机制及运行过程</h2><h3 id="2-1、Java-语言的特点：跨平台性"><a href="#2-1、Java-语言的特点：跨平台性" class="headerlink" title="2.1、Java 语言的特点：跨平台性"></a>2.1、Java 语言的特点：跨平台性</h3><p><img src="https://www.helloimg.com/images/2022/09/22/Z8xTwM.md.png" alt=""></p><hr><h3 id="2-2、Java-核心机制-Java-虚拟机-JVM-java-virtual-machine"><a href="#2-2、Java-核心机制-Java-虚拟机-JVM-java-virtual-machine" class="headerlink" title="2.2、Java 核心机制-Java 虚拟机[JVM java virtual machine]"></a>2.2、Java 核心机制-Java 虚拟机[JVM java virtual machine]</h3><ol><li>JVM 是一个虚拟的计算机，具有指令集并使用不同的存储区域。负责执行指令，管理数据、内存、寄存器，包含在<u>JDK</u>中</li><li>对于不同的平台(系统)，有不同的虚拟机。</li><li>Java 虚拟机机制屏蔽了底层运行平台的差别，实现了“一次编译，到处运行”<br><img src="https://www.helloimg.com/images/2022/09/22/Z8xWhP.md.png" alt="编译指令、运行指令"></li></ol><h2 id="3、什么是-JDK，JRE"><a href="#3、什么是-JDK，JRE" class="headerlink" title="3、什么是 JDK，JRE"></a>3、什么是 JDK，JRE</h2><h3 id="3-1、JDK-基本介绍"><a href="#3-1、JDK-基本介绍" class="headerlink" title="3.1、JDK 基本介绍"></a>3.1、JDK 基本介绍</h3><ol><li>JDK 的全称(Java Development Kit)[ Java 开发工具包]<br>JDK = JRE + java 的开发工具 [java, javac,javadoc,javap 等]</li><li>JDK 是提供给 Java 开发人员使用的，其中包含了java的开发工具，也包括了JRE。所以安装了JDK，就不用在单独安装JRE了。</li></ol><h3 id="3-2、JRE-基本介绍"><a href="#3-2、JRE-基本介绍" class="headerlink" title="3.2、JRE 基本介绍"></a>3.2、JRE 基本介绍</h3><ol><li>JRE(Java Runtime Environment)[Java 运行环境]<br>JRE = JVM + Java 的核心类库[类]</li><li>包括Java虚拟机(JVM Java Virtual Machine)和Java程序所需的核心类库等，如果想要运行一个开发好的Java程序， 计算机中只需要安装JRE即可。</li></ol><h3 id="3-3、JDK、JRE-和-JVM-的包含关系"><a href="#3-3、JDK、JRE-和-JVM-的包含关系" class="headerlink" title="3.3、JDK、JRE 和 JVM 的包含关系"></a>3.3、JDK、JRE 和 JVM 的包含关系</h3><ol><li>JDK = JRE + 开发工具集（例如 Javac,java 编译工具等)</li><li>JRE = JVM + Java SE 标准类库（java 核心类库）</li><li>如果只想运行开发好的 .class 文件只需要JRE</li></ol><h1 id="二、Java入门"><a href="#二、Java入门" class="headerlink" title="二、Java入门"></a>二、Java入门</h1><h2 id="1、第一个程序"><a href="#1、第一个程序" class="headerlink" title="1、第一个程序"></a>1、第一个程序</h2><p>开发一个a1.java程序，可以输出“你好”<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//java快速入门，演示java开发步骤</span></span><br><span class="line"><span class="comment">//对代码的相关说明</span></span><br><span class="line"><span class="comment">//1. public class a1 表示 a1 是一个类,是一个 public 公有的类</span></span><br><span class="line"><span class="comment">//2. a1 &#123; &#125; 表示一个类的开始和结束</span></span><br><span class="line"><span class="comment">//3. public static void main(String[] args) 表示一个主方法,即我们程序的入口</span></span><br><span class="line"><span class="comment">//4. main() &#123;&#125; 表示方法的开始和结束</span></span><br><span class="line"><span class="comment">//5. System.out.println(&quot;你好&quot;); 表示输出&quot;你好&quot;到屏幕</span></span><br><span class="line"><span class="comment">//6. ; 表示语句结束</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">a1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123; <span class="comment">//编写一个 main 方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;你好&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><img src="https://www.helloimg.com/images/2022/09/23/Z8nXpr.png" alt=""><br><img src="https://www.helloimg.com/images/2022/09/23/Z8nq5T.md.png" alt=""></p><h2 id="2、Java-开发注意事项和细节说明"><a href="#2、Java-开发注意事项和细节说明" class="headerlink" title="2、Java 开发注意事项和细节说明"></a>2、Java 开发注意事项和细节说明</h2><p><img src="https://www.helloimg.com/images/2022/09/23/Z8nMYY.png" alt=""><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//java快速入门，演示java开发步骤</span></span><br><span class="line"><span class="comment">//对代码的相关说明</span></span><br><span class="line"><span class="comment">//1. public class a1 表示 a1 是一个类,是一个 public 公有的类</span></span><br><span class="line"><span class="comment">//2. a1 &#123; &#125; 表示一个类的开始和结束</span></span><br><span class="line"><span class="comment">//3. public static void main(String[] args) 表示一个主方法,即我们程序的入口</span></span><br><span class="line"><span class="comment">//4. main() &#123;&#125; 表示方法的开始和结束</span></span><br><span class="line"><span class="comment">//5. System.out.println(&quot;你好&quot;); 表示输出&quot;你好&quot;到屏幕</span></span><br><span class="line"><span class="comment">//6. ; 表示语句结束</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">a1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123; <span class="comment">//编写一个 main 方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;你好&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//一个源文件中最多只能有一个 public 类。其它类的个数不限。[演示]</span></span><br><span class="line"><span class="comment">//Dog 是一个类</span></span><br><span class="line"><span class="comment">//编译后，每一个类，都对于一个.class文件</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一个源文件中最多只能有一个 public 类。其它类的个数不限，也可以将 main 方法写在非 public 类中，</span></span><br><span class="line">    <span class="comment">// 然后指定运行非 public 类，这样入口方法就是非 public 的 main 方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello,小狗狗&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tiger</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello,小狗狗&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="3、Java-转义字符"><a href="#3、Java-转义字符" class="headerlink" title="3、Java 转义字符"></a>3、Java 转义字符</h2><p>在控制台，输入 tab 键，可以实现命令补全</p><pre><code>\t ：一个制表位，实现对齐的功能 \n ：换行符 \\ ：一个\ \&quot; :一个&quot; \&#39; ：一个&#39; \r :一个回车</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//演示转义字符的使用</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChangeChar</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//   \t ：一个制表位，实现对齐的功能 (输出内容之间有固定宽度)</span></span><br><span class="line">        System.out.println(<span class="string">&quot;北京\t天津\t上海&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//   \n ：换行符</span></span><br><span class="line">        System.out.println(<span class="string">&quot;jack\nsmith\nmary&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//   \\ ：一个\  (第一个\代表转义，第二个\代表\)  \\\\ :两个\</span></span><br><span class="line">        System.out.println(<span class="string">&quot;C:\\Windows\\System32\\cmd.exe&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//   \&quot; : 一个&quot;</span></span><br><span class="line">        System.out.println(<span class="string">&quot;老韩说:\&quot;要好好学习 java,有前途\&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//   \&#x27; ：一个&#x27;</span></span><br><span class="line">        System.out.println(<span class="string">&quot;老韩说:\&#x27;要好好学习 java,有前途\&#x27;&quot;</span>); <span class="comment">//这里单引号也可以不用转义，可以直接用</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//   \r :一个回车</span></span><br><span class="line">        <span class="comment">// 解读</span></span><br><span class="line">        <span class="comment">// 1. 输出 韩顺平教育</span></span><br><span class="line">        <span class="comment">// 2. \r 表示回车</span></span><br><span class="line">        System.out.println(<span class="string">&quot;韩顺平教育\r北京&quot;</span>);  <span class="comment">//命令行窗口结果：北京平教育， idea输出结果：北京</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://www.helloimg.com/images/2022/09/25/Z8v0Cb.png" alt="运行结果"></p><h2 id="4、注释"><a href="#4、注释" class="headerlink" title="4、注释"></a>4、注释</h2><h3 id="4-1、单行注释和多行注释"><a href="#4-1、单行注释和多行注释" class="headerlink" title="4.1、单行注释和多行注释"></a>4.1、单行注释和多行注释</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">单行注释      //注释文字</span><br><span class="line">多行注释      /* 注释文字 */</span><br></pre></td></tr></table></figure><hr><pre><code>细节：1.被注释的文字，不会被 JVM（java 虚拟机）解释执行      2.多行注释里面不允许有多行注释嵌套</code></pre><h3 id="4-2、文档注释"><a href="#4-2、文档注释" class="headerlink" title="4.2、文档注释"></a>4.2、文档注释</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">文档注释   /** */</span><br></pre></td></tr></table></figure><p><img src="https://www.helloimg.com/images/2022/09/29/ZKLwNv.png" alt=""><br><div class="tag link"><a class="link-card" title="idea使用javadoc标签" href="https://qxz23.github.io/posts/4787801/"><div class="left"><img src="https://s1.imagehub.cc/images/2022/10/07/t35.png"/></div><div class="right"><p class="text">idea使用javadoc标签</p><p class="url">https://qxz23.github.io/posts/4787801/</p></div></a></div></p><h3 id="4-3、-Java-代码规范（基本）"><a href="#4-3、-Java-代码规范（基本）" class="headerlink" title="4.3、 Java 代码规范（基本）"></a>4.3、 Java 代码规范（基本）</h3><p><img src="https://www.helloimg.com/images/2022/09/29/ZKMLXz.png" alt=""><br><img src="https://www.helloimg.com/images/2022/09/29/ZKMrnX.md.png" alt=""></p><h1 id="三、变量"><a href="#三、变量" class="headerlink" title="三、变量"></a>三、变量</h1><p><img src="http://tva1.sinaimg.cn/mw690/006q0v6Vly1h6r41r3ebfj30on09gjyv.jpg" alt="a8"></p><h2 id="1、变量的介绍"><a href="#1、变量的介绍" class="headerlink" title="1、变量的介绍"></a>1、变量的介绍</h2><h3 id="1-1、概念"><a href="#1-1、概念" class="headerlink" title="1.1、概念"></a>1.1、概念</h3><p>变量相当于内存中一个数据存储空间的表示，你可以把变量看做是一个房间的门牌号，通过门牌号我们可以找到房间，而通过变量名可以访问到变量(值)。</p><h3 id="1-2、变量使用的基本步骤"><a href="#1-2、变量使用的基本步骤" class="headerlink" title="1.2、变量使用的基本步骤"></a>1.2、变量使用的基本步骤</h3><ol><li>声明变量<br>int a;</li><li>赋值<br>a = 60; // 把 60 赋给 a<br>使用 System.out.println(a);<br>//也可以一步到位[int a = 60; 通常我们是一步完成]</li></ol><h3 id="1-3、变量快速入门"><a href="#1-3、变量快速入门" class="headerlink" title="1.3、变量快速入门"></a>1.3、变量快速入门</h3><p>演示记录 人的信息的代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Var02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//记录人的信息</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">score</span> <span class="operator">=</span> <span class="number">88.9</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">gender</span> <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;king&quot;</span>;</span><br><span class="line">        <span class="comment">//输出信息（有快捷键）</span></span><br><span class="line">        System.out.println(<span class="string">&quot;人的信息如下：&quot;</span>);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        System.out.println(age);</span><br><span class="line">        System.out.println(score);</span><br><span class="line">        System.out.println(gender);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><img src="http://tva1.sinaimg.cn/mw690/006q0v6Vly1h6r44je98uj30f8052wfm.jpg" alt="a9.运行结果"></p><hr><p>变量使用注意事项</p><ol><li>变量表示内存中的一个存储区域[不同的变量，类型不同，占用的空间大小不同，<br>比如：int 4个字节，double就是8个字节]</li><li>该区域有自己的名称[变量名]和类型[数据类型]</li><li>变量必须先声明，后使用，即有顺序</li><li>该区域的数据/值可以在<kbd>同一类型</kbd>范围内不断变化</li><li>变量在同一个作用域内不能重名</li><li>变量=变量名+值+数据类型，这一点注意。变量<kbd>三要素</kbd><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VarDetail</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//变量必须先声明，后使用, 即有顺序</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">50</span>; <span class="comment">//int类型</span></span><br><span class="line">        System.out.println(a);<span class="comment">//输出50</span></span><br><span class="line">        <span class="comment">// 该区域的数据/值可以在同一类型范围内不断变化</span></span><br><span class="line">        <span class="comment">//a = &quot;jack&quot;; //×</span></span><br><span class="line">        a = <span class="number">88</span>; <span class="comment">//对</span></span><br><span class="line">        System.out.println(a);<span class="comment">//输出88</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//变量在同一个作用域内不能重名</span></span><br><span class="line">        <span class="comment">//int a = 77;//错误</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">666</span>;<span class="comment">//对</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="2、程序中-号的使用"><a href="#2、程序中-号的使用" class="headerlink" title="2、程序中 +号的使用"></a>2、程序中 +号的使用</h2><ol><li>当左右两边都是数值型时，则做加法运算</li><li>当左右两边有一方为字符串，则做拼接运算</li><li>运算顺序，是从左到右<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Plus</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">100</span> + <span class="number">98</span>);<span class="comment">//198</span></span><br><span class="line">        System.out.println(<span class="string">&quot;100&quot;</span> + <span class="number">98</span>);<span class="comment">//10098</span></span><br><span class="line">        System.out.println(<span class="number">100</span> + <span class="number">3</span> + <span class="string">&quot;hello&quot;</span>);<span class="comment">//103hello</span></span><br><span class="line">        System.out.println(<span class="string">&quot;hello&quot;</span> + <span class="number">100</span> + <span class="number">3</span>);<span class="comment">//hello1003</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="3、✒️数据类型"><a href="#3、✒️数据类型" class="headerlink" title="3、✒️数据类型"></a>3、✒️数据类型</h2><p>每一种数据都定义了明确的数据类型，在内存中分配了不同大小的内存空间(字节)。<br><img src="http://tva1.sinaimg.cn/mw690/006q0v6Vly1h6s8ebsbf3j30rk08x78z.jpg" alt="a10.背过这张图"></p><blockquote><p>String(字符串)准确来讲是一个类(class)</p></blockquote><h3 id="3-1、整数类型"><a href="#3-1、整数类型" class="headerlink" title="3.1、整数类型"></a>3.1、整数类型</h3><p>Java 的整数类型就是用于存放整数值的，比如 12 , 30, 3456 等等</p><h4 id="3-1-1、案例演示"><a href="#3-1-1、案例演示" class="headerlink" title="3.1.1、案例演示"></a>3.1.1、案例演示</h4><p>byte n1 = 10;//1个字节<br>short n2 = 10;//2个字节<br>int n3 = 10;//4 个字节<br>long n4 = 10; //8 个字节</p><h4 id="3-1-2、整型的类型"><a href="#3-1-2、整型的类型" class="headerlink" title="3.1.2、整型的类型"></a>3.1.2、整型的类型</h4><p><img src="http://tva1.sinaimg.cn/mw690/006q0v6Vly1h6t1wcsf26j30og0800x4.jpg" alt="a11."></p><h4 id="3-1-3、整型的使用细节"><a href="#3-1-3、整型的使用细节" class="headerlink" title="3.1.3、整型的使用细节"></a>3.1.3、整型的使用细节</h4><ol><li>Java各整数类型有固定的范围和字段长度，不受具体OS[操作系统]的影响，以保证java程序的可移植性。</li><li>Java的整型常量（具体值）默认为int型，声明long型常量须后加’l’或’L’</li><li>java程序中变量常声明为int型，除非不足以表示大数，才使用long(够用就行)</li><li>bit：计算机中的最小存储单位。byte：计算机中基本存储单元，1byte= 8 bit<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IntDetail</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Java 的整型常量（具体值）默认为 int 型，声明 long 型常量须后加‘l’或‘L’</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="number">1</span>;<span class="comment">//占4个字节</span></span><br><span class="line">        <span class="comment">//int n2 = 1L;//对不对?不对(1L是long类型，int装不下，报错）</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">n3</span> <span class="operator">=</span> <span class="number">1L</span>;<span class="comment">//对</span></span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-2、浮点类型"><a href="#3-2、浮点类型" class="headerlink" title="3.2、浮点类型"></a>3.2、浮点类型</h3><p>Java 的浮点类型可以表示一个小数，比如 123.4 ，7.8 ，0.12 等等</p><h4 id="3-2-1、浮点型的分类"><a href="#3-2-1、浮点型的分类" class="headerlink" title="3.2.1、浮点型的分类"></a>3.2.1、浮点型的分类</h4><p><img src="http://tva1.sinaimg.cn/mw690/006q0v6Vly1h6tko4fkx8j30ol04ogo7.jpg" alt="a12."></p><pre><code>1.关于浮点数在机器中存放形式的简单说明,浮点数=符号位+指数位+尾数位2.尾数部分可能丢失，造成精度损失(小数都是近似值)。</code></pre><h4 id="3-2-2、浮点型使用细节"><a href="#3-2-2、浮点型使用细节" class="headerlink" title="3.2.2、浮点型使用细节"></a>3.2.2、浮点型使用细节</h4><ol><li>与整数类型类似，Java浮点类型也有固定的范围字段长度，不受具体OS的<br>影响，(float4个字节,double是8个字节)</li><li>Java 的浮点型常量(具体值)默认为 double 型，声明 float 型常量，须后加‘f’或‘F’</li><li>浮点型常量有两种表示形式<br>十进制数形式：如：5.12、 512.0f 、.512 (必须有小数点）<br>科学计数法形式:如：5.12e2 等于[5.12 * 10的2次方]，5.12e-2 等于[5.12 / 10 的2次方]</li><li>通常情况下，应该使用 double 型，因为它比 float 型更精确。</li><li>浮点数使用陷阱: 2.7 和 8.1 / 3 比较<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FloatDetail</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Java 的浮点型常量(具体值)默认为 double 型，声明 float 型常量，须后加‘f’或‘F&#x27;</span></span><br><span class="line">        <span class="comment">//float num1 = 1.1; //对不对?错误</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">num2</span> <span class="operator">=</span> <span class="number">1.1F</span>; <span class="comment">//对的</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">num3</span> <span class="operator">=</span> <span class="number">1.1</span>; <span class="comment">//对</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">num4</span> <span class="operator">=</span> <span class="number">1.1f</span>; <span class="comment">//对</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//十进制数形式：如：5.12 512.0f .512 (必须有小数点）</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">num5</span> <span class="operator">=</span> <span class="number">.123</span>; <span class="comment">//等价 0.123</span></span><br><span class="line">        System.out.println(num5);<span class="comment">//输出0.123</span></span><br><span class="line">        <span class="comment">//科学计数法形式:如：5.12e2 等于[5.12 * 10的2次方]，5.12e-2 等于[5.12 / 10 的2次方]</span></span><br><span class="line">        System.out.println(<span class="number">5.12e2</span>);<span class="comment">//输出512.0(因为是浮点型，所以带小数点)</span></span><br><span class="line">        System.out.println(<span class="number">5.12e-2</span>);<span class="comment">//输出0.0512</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//通常情况下，应该使用 double 型，因为它比 float 型更精确。</span></span><br><span class="line">        <span class="comment">//[举例说明]double num9 = 2.1234567851;float num10 = 2.1234567851F;</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">num9</span> <span class="operator">=</span> <span class="number">2.1234567851</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">num10</span> <span class="operator">=</span> <span class="number">2.1234567851F</span>;</span><br><span class="line">        System.out.println(num9);</span><br><span class="line">        System.out.println(num10);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//浮点数使用陷阱: 2.7 和 8.1 / 3 比较</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">num11</span> <span class="operator">=</span> <span class="number">2.7</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">num12</span> <span class="operator">=</span> <span class="number">8.1</span> / <span class="number">3</span>; <span class="comment">//(数学上=2.7)</span></span><br><span class="line">        System.out.println(num11);<span class="comment">//2.7</span></span><br><span class="line">        System.out.println(num12);<span class="comment">//接近 2.7 的一个小数，而不是 2.7</span></span><br><span class="line">        <span class="comment">//得到一个重要的使用点: 当我们对运算结果是小数的进行相等判断时，要小心</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( num11 == num12) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;num11 == num12 相等&quot;</span>);</span><br><span class="line">        &#125;<span class="comment">//错误写法</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//应该是以两个数的差值的绝对值，在某个精度范围类判断</span></span><br><span class="line">        <span class="comment">//正确的写法 ,（先选中，再 ctrl + / 注释快捷键, 再次输入就取消注释）</span></span><br><span class="line">        <span class="keyword">if</span>(Math.abs(num11 - num12) &lt; <span class="number">0.000001</span> ) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;差值非常小，到我的规定精度，认为相等...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 可以通过 java API 来看</span></span><br><span class="line">        System.out.println(Math.abs(num11 - num12));</span><br><span class="line">        <span class="comment">//细节:如果是直接查询得的的小数或者直接赋值，是可以判断相等</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="http://tva1.sinaimg.cn/mw690/006q0v6Vly1h6uj4kaftrj30c308wdi8.jpg" alt="a13.运行结果"></li></ol><h3 id="3-3、Java-API-文档"><a href="#3-3、Java-API-文档" class="headerlink" title="3.3、Java API 文档"></a>3.3、Java API 文档</h3><ol><li>API（Application Programming Interface，应用程序编程接口）,是Java 提供的基本编程接口（java提供的类还有相关的方法）。<br>中文在线文档:<div class="tag link"><a class="link-card" title="MaTools 在线API" href="https://www.matools.com"><div class="left"><img src="https://s1.imagehub.cc/images/2022/10/07/t35.png"/></div><div class="right"><p class="text">MaTools 在线API</p><p class="url">https://www.matools.com</p></div></a></div></li><li>Java语言提供了大量的基础类，因此 Oracle公司也为这些基础类提供了相应的API文档，用于告诉开发者如何使用这些类，以及这些类里包含的方法.</li><li>Java类的组织形式[图]<br><img src="http://tva1.sinaimg.cn/mw690/006q0v6Vly1h6utnt36ucj30pp0aogtc.jpg" alt="a14."></li><li>举例说明如何使用,如ArrayList类有哪些方法<br>(1)按照：包—&gt;类—&gt;方法   查找<br>(2)直接索引ArrayList</li></ol><h3 id="3-4、字符类型-char"><a href="#3-4、字符类型-char" class="headerlink" title="3.4、字符类型(char)"></a>3.4、字符类型(char)</h3>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML笔记</title>
      <link href="/posts/a0ca7bc4/"/>
      <url>/posts/a0ca7bc4/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/posts/9daba997/"/>
      <url>/posts/9daba997/</url>
      
        <content type="html"><![CDATA[<p>1.<u>文本内容</u></p><p>2.<emp>文本内容</emp></p><wavy>文本内容</wavy><del>文本内容</del><kbd>文本内容</kbd><psw>文本内容</psw><div class="timeline color]"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间线标题（可选）[</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>时间节点（标题）</p></div></div><div class='timeline-item-content'><p>正文内容</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>时间节点（标题）</p></div></div><div class='timeline-item-content'><p>正文内容</p></div></div></div><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/qxz23"><img src="https://github-readme-stats.vercel.app/api/?username=qxz23&theme=onedark&show_owner=true"/></a><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a><p>这是 <img no-lazy class="inline" src="https://jsdelivr.pai233.top/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://jsdelivr.pai233.top/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。<br>3.链接卡片 link<br><div class="tag link"><a class="link-card" title="标题" href="链接"><div class="left"><img src="图片链接（可选）"/></div><div class="right"><p class="text">标题</p><p class="url">链接</p></div></a></div></p>]]></content>
      
      
      <categories>
          
          <category> butterfly </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>代码演示</title>
      <link href="/posts/be82d226/"/>
      <url>/posts/be82d226/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;<span class="comment">//import java.util.Scanner;import java.util.Scanner;import java.util.Scanner;import java.util.Scanner;</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="type">int</span> min=sc.nextInt(); </span><br><span class="line"><span class="type">int</span> max=sc.nextInt(); </span><br><span class="line"><span class="type">int</span> factor=sc.nextInt(); </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=min;i&lt;=max;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i%factor==<span class="number">0</span>)&#123;</span><br><span class="line">System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="type">int</span> min=sc.nextInt(); </span><br><span class="line"><span class="type">int</span> max=sc.nextInt(); </span><br><span class="line"><span class="type">int</span> factor=sc.nextInt(); </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=min;i&lt;=max;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i%factor==<span class="number">0</span>)&#123;</span><br><span class="line">System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="import-java-util-Scanner"><a href="#import-java-util-Scanner" class="headerlink" title="import java.util.Scanner;"></a>import java.util.Scanner;</h2><p>public class Main {<br>    public static void main(String[] args) {<br>        Scanner sc = new Scanner(System.in);<br>        int min=sc.nextInt();<br>        int max=sc.nextInt();<br>        int factor=sc.nextInt(); </p><pre><code>    for(int i=min;i&lt;=max;i++)&#123;        if(i%factor==0)&#123;            System.out.print(i+&quot; &quot;);        &#125;    &#125;&#125;</code></pre><p>}</p><h3 id="import-java-util-Scanner-1"><a href="#import-java-util-Scanner-1" class="headerlink" title="import java.util.Scanner;"></a>import java.util.Scanner;</h3><p>public class Main {<br>    public static void main(String[] args) {<br>        Scanner sc = new Scanner(System.in);<br>        int min=sc.nextInt();<br>        int max=sc.nextInt();<br>        int factor=sc.nextInt(); </p><pre><code>    for(int i=min;i&lt;=max;i++)&#123;        if(i%factor==0)&#123;            System.out.print(i+&quot; &quot;);        &#125;    &#125;&#125;</code></pre><p>}</p><h2 id="import-java-util-Scanner-2"><a href="#import-java-util-Scanner-2" class="headerlink" title="import java.util.Scanner;"></a>import java.util.Scanner;</h2><p>public class Main {<br>    public static void main(String[] args) {<br>        Scanner sc = new Scanner(System.in);<br>        int min=sc.nextInt();<br>        int max=sc.nextInt();<br>        int factor=sc.nextInt(); </p><pre><code>    for(int i=min;i&lt;=max;i++)&#123;        if(i%factor==0)&#123;            System.out.print(i+&quot; &quot;);        &#125;    &#125;&#125;</code></pre><p>}</p><h3 id="import-java-util-Scanner-3"><a href="#import-java-util-Scanner-3" class="headerlink" title="import java.util.Scanner;"></a>import java.util.Scanner;</h3><p>public class Main {<br>    public static void main(String[] args) {<br>        Scanner sc = new Scanner(System.in);<br>        int min=sc.nextInt();<br>        int max=sc.nextInt();<br>        int factor=sc.nextInt(); </p><pre><code>    for(int i=min;i&lt;=max;i++)&#123;        if(i%factor==0)&#123;            System.out.print(i+&quot; &quot;);        &#125;    &#125;&#125;</code></pre><p>}</p><p><img src="https://www.helloimg.com/images/2022/04/12/R4FAzS.jpg" alt="图片名称1111"></p>]]></content>
      
      
      <categories>
          
          <category> butterfly </category>
          
          <category> 11 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇</title>
      <link href="/posts/73626faf/"/>
      <url>/posts/73626faf/</url>
      
        <content type="html"><![CDATA[<p>我的博客<br>1、清理缓存<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br></pre></td></tr></table></figure><br>hexo cl 是 hexo clean 的简写<br>(新建文章:hexo n “标题”)</p><p>2、生成静态页面<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><br>hexo g 是 hexo generate 的简写</p><p>3、在本地映射（预览）<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><br>hexo s 是 hexo server 的简写</p><p>4、部署推送<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><br>hexo d 是 hexo deploy 的简写</p><p>5、以上连写示例一（清理缓存 + 生成静态页面 + 在本地预览）<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><br>6、以上连写示例二（清理缓存 + 生成静态页面 + 部署推送）<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><br>gulp压缩<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><br>111122333444</p><p>7·文章置顶<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 第一篇</span><br><span class="line">date: 2022/4/12 9:37:37</span><br><span class="line">sticky: 1</span><br></pre></td></tr></table></figure><br>8·建立分类及多级分类<br>在categories文件夹下建立md文件，可建立多个，命名自取，格式如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 未来</span><br><span class="line">date: 2022-04-14 13:19:08</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>打开文章md文件<br>一级分类:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 第一篇</span><br><span class="line">date: 2022/4/14 9:37:37</span><br><span class="line">categories: 未来</span><br><span class="line">---</span><br></pre></td></tr></table></figure><br>多级分类：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 第一篇</span><br><span class="line">date: 2022/4/14 9:37:37</span><br><span class="line">categories: </span><br><span class="line">- [母分类,子分类,子子分类]</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><hr><p>多个标签<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 第一篇</span><br><span class="line">date: 2022/4/14 9:37:37</span><br><span class="line">tags:</span><br><span class="line">  - tags1</span><br><span class="line">  - tags2</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>9、快捷键</p><table><tr><td bgcolor=orange>ctrl+x 剪切Ctrl+z 撤销Ctrl+s 保存Ctrl+f 查找Alt+F4 关闭窗口Windows+R cmdWindows+E 打开我的电脑Ctrl+shift+Esc 打开任务管理器Windows+Tab 切换应用程序</td></tr></table><p>常用的DOS命令，打开cmd（鼠标右键=粘贴）<br>1.盘符切换 </p><table><tr><td bgcolor=orange>盘名：+Enter(英文冒号)，例如打开D盘  输入D: 再点Enter</td></tr></table>2.查看当前目录下的所有文件<table><tr><td bgcolor=orange>在盘目录下输入dir,再点回车</td></tr></table>3.切换盘目录<table><tr><td bgcolor=orange>输入 cd /d 盘名:    例如切换到D盘输入cd /d D:或cd /d D:\文件名</td></tr></table>4.查看电脑IP<table><tr><td bgcolor=orange>输入ipconfig</td></tr></table>5.查看指定的目录下所有的子级目录 tree<table><tr><td bgcolor=orange>tree+盘名\文件名</td></tr></table>6.清屏 cls7.退出DOS exit8.(md[创建目 录],rd[删除目录],copy[拷贝文件],del[删除文件],echo[输入内容到文件],type,move[剪切]) => Linux,9.![](https://www.helloimg.com/images/2022/09/29/ZKTF1E.md.png)10.Markdown添加背景色<table><tr><td bgcolor=orange></td></tr></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=orange&gt;内容&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure><p>D:\博客\GitHub博客\qxz23blog\source_posts\js\1.js</p><p>源文件更改记录.<br>源文件位置D:\博客\GitHub博客\qxz23sblog\node_modules\hexo-theme-butterfly</p><p>1.文章卡片themes\butterfly\layout\includes\mixins\post-ui.pug  DZ<br>        themes\butterfly\source\css_page\homepage.styl<br>1.1   页脚 生成文件夹node_modules\hexo-butterfly-footer-beautify<br>2.跳动的心/hexo-theme-butterfly/layout/includes/footer.pug   KXS<br>3.养鱼<br>\themes\butterfly\layout\includes\footer.pug<br>themes\butterfly\source\css_layout\footer.styl    MuJin’s Blog<br>4.徽标宽度node_modules\hexo-butterfly-footer-beautify\lib\html.pug<br>5.加了script.js文件（鼠标特效）<br>6.版权声明 hexo-theme-butterfly\layout\includes\post\post-copyright.pug<br>           hexo-theme-butterfly\source\css_layout\post.styl    DZ（Akliar）<br>           <img src="http://tva1.sinaimg.cn/mw690/006q0v6Vly1h6wuoehhmij30qb0b7gre.jpg" alt="b1.png"></p><p>插件<br>1.评论<br>2.徽标<br>3.rss<br>4.admin<br>5.外挂标签两个插件 卸载一个  DZ<br>6.唯一链接 tzy1997</p><p>加了版本控制111<br>🌏✒️</p><p>npm命令<br>【npm install xxx】利用 npm 安装xxx模块到当前命令行所在目录；</p><p>【npm install -g xxx】利用npm安装全局模块xxx；</p><p>【npm install xxx】安装但不写入package.json；</p><p>【npm install xxx –save】 安装并写入package.json的”dependencies”中；</p><p>【npm install xxx –save-dev】安装并写入package.json的”devDependencies”中。</p><p>npm 删除模块<br>【npm uninstall xxx】删除xxx模块；<br>【npm uninstall -g xxx】删除全局模块xxx；</p>]]></content>
      
      
      <categories>
          
          <category> 22 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156/"/>
      <url>/posts/4a17b156/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
